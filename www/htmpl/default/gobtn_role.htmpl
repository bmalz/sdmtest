<PDM_IF 0>
gobtn_role.htmpl
WHEN PRESENTED:
    When we need to display the Go button and its dropdown 
</PDM_IF>
<html lang="en">
<head>
<PDM_PRAGMA RELEASE=110>
<PDM_INCLUDE FILE=styles.htmpl>
<script type="text/javascript" src="$CAisd/scripts/window_manager.js"></script>
<script type="text/javascript" src="$CAisd/scripts/sitemods.js"></script>
<script type="text/javascript" src="$CAisd/scripts/convert_date.js"></script>
<script type="text/javascript" src="$CAisd/scripts/kt_system.js"></script>
<PDM_INCLUDE FILE=std_head.htmpl busy=no>
<script type="text/javascript">
function Go_Data(resource, role_menu, dflt_obj_type)
{
    this.resource = resource;
    this.role_menu = role_menu; 
    this.dflt_obj_type = dflt_obj_type;
}
var go_list = new Array();
var ahdframeset = parent.ahdframeset;
var form_cancelled = false;

function leftTrim(str) { 
	for(var k = 0; k < str.length && isWhitespace(str.charAt(k)); k++);
	
	return str.substring(k, str.length);
}
function rightTrim(str) {
	for(var j=str.length-1; j>=0 && isWhitespace(str.charAt(j)) ; j--);
	
	return str.substring(0,j+1);
}
function trim(str) {
	return leftTrim(rightTrim(str));
}
function isWhitespace(charToCheck) {
	var whitespaceChars = " \t\n\r\f";
	var index = whitespaceChars.indexOf(charToCheck);
	return (index != -1);
}
function trimSearchKey(e) {
	if (e.name == "searchKey") {
		e.value = trim(e.value);
	}
}
function gobtnFocus(e)
{
   if ( ! _browser.supportsLayers ) {
      if ( e.name == "searchKey" ) {
         e.className = "focusField";
         setTempKeyDownHandler(gobtnKeyDown);
      }
      else if ( ! _browser.isIE ) {
         e.className = "focusField";
      }
   }
}

function gobtnBlur(e)
{
   if ( ! _browser.supportsLayers ) {
      if ( e.name == "searchKey" ) {
         e.className = "";
         setTempKeyDownHandler(null);
      }
      else if ( ! _browser.isIE ) {
         e.className = "";
      }
   }
}

function gobtnKeyDown( active_element, keycode, shiftkey, altkey )
{
   var ticket_type;
   switch ( keycode ) {
      case ARROW_DOWN:
         ticket_type = document.getElementById("ticket_type");
         if ( typeof ticket_type == "object" ) {
            if ( ticket_type.selectedIndex < ticket_type.length - 1 )
               ticket_type.selectedIndex++;
            else
               ticket_type.selectedIndex = 0;
         }
         return false;

      case ARROW_UP:
         ticket_type = document.getElementById("ticket_type");
         if ( typeof ticket_type == "object" ) {
            if ( ticket_type.selectedIndex > 0 )
               ticket_type.selectedIndex--;
            else
               ticket_type.selectedIndex = ticket_type.length - 1;
         }
         return false;

      case HOME:
         if ( typeof active_element.type == "string" &&
                  ( active_element.type == "text" ||
                    active_element.type == "textarea" ) ) {
             e = null;
             break;
         }
         // Falling through...

      case PAGE_UP:
         if ( shiftkey ) {
            tabOff();
            return false;
         }
   }
   return true;
}

function tabOff(direction)
{
   if ( typeof direction != "number" )
      direction = 1;
   else if ( _browser.isIE )
      direction = ( window.event.shiftKey ? -1 : 1 );
   if ( direction == 1 ) {
      if ( ! bubbleToMainWindow( document.goBtnForm.searchKey, PAGE_UP, true ))
         document.goBtnForm.searchKey.focus();
   }
   else {
      document.goBtnForm.searchKey.focus();
   }
}

function show_action_in_progress()
{
  ahdframe = ahdframeset.ahdframe;
  action_in_progress();
}

// Disable the browser context menu
document.oncontextmenu = function (e) {
	return false;
}

function find_dflt_obj_type(code_name)
{
    var ret = "";
    var obj = go_list[code_name];
    if (typeof obj != "undefined")
		ret = obj.dflt_obj_type; 
    return ret; 
}

function find_dflt_go() 
{
	var ret = "";
	if(typeof default_code != "undefined")
		ret = default_code;
	return ret;
}

</script>
</head>
<body class="gn_sdm_header_background">
<script type="text/javascript">
var showAboutAndRefresh = true;
if ( !_browser.isIE )
{
   // Hide the About and Refresh context menu items for Firefox only since the header 
   // area parent window size restriction limits the display area to two items only (SCO 28116)
   showAboutAndRefresh = false;
}
disable_right_click(true, showAboutAndRefresh );
document.onkeydown = uspKeydownHandler;
// Override default style so product name shows on dark background.
html = generate_logo_product_name_html("sdm_product_name");
html = "<table class='product_info_container'><tbody><tr><td>" + html;
if ((typeof ahdtop.propSupportR50 != "string") || 
    (ahdtop.propSupportR50 == "no"))
{
    html += "<div id='busygifLayer' style='display: none;' " +
            "class='busy_indicator_position'>";
    if ( ! ahdtop.cstUsingScreenReader )
      html +=  "<a href=\"javascript:show_action_in_progress();\">" +
               "<img class='gn_container_no_border' height='20' width='20' src=\"" +
               cfgCAISD + "/img/busy.gif\" alt=\"" +
               msgtext("Please_wait_for_action_complet") + "\"></a>";
         // Please wait for action completion - click for more information
    html += "</div>";
}
html += "</td> <td>";

<PDM_IF "$prop.WSPHOST" == "">
if (typeof ahdframeset.suppressGoButton != "boolean" || !ahdframeset.suppressGoButton) 
{
    var go_html;
    go_html = '<div id="gobtnDiv" ';
    if (typeof parent.cfgInitialURL != "undefined" && 
        parent.cfgInitialURL.indexOf("reports.htmpl") != -1)
    {
	go_html += 'style="display: none;" ';
    }
    go_html += 'class="gobtn_position">';

    go_html += "<form method='POST' action='" + cfgCgi +
            "' name='goBtnForm' onsubmit='return false;'>\n" +
            "<input type='hidden' name='SID' value='" + cfgSID + "'>\n" +
            "<input type='hidden' name='FID' value='105'>";

    go_html += '<table height="100%" cellpadding="0" cellspacing="0" class="gn_container_no_border">';
    go_html += '<tr valign="center">';
    go_html += '<td>&nbsp;';
		
    go_html += '<select id="ticket_type" name="ticket_type" tabindex="1" onfocus="gobtnFocus(this)" onblur="gobtnBlur(this)"';
    if ( ahdtop.cstUsingScreenReader )
    { 
	go_html += " accesskey=" + msgtext("G"); // "G" - hotkey for Go btn
    }
    go_html += " title=\"Object type selection\">";
    var code_name; 
    var fname; 
    var show_go = 0;
    var role_id = "$SESSION.ROLE_ID";
    var resource;
    var role_menu;
    var code_arr = new Array();
    var fname_arr = new Array();
    var idx = 0;
    var default_code = "";
    var dflt_obj_type = "";
    var ticket_role_menubar = "";
    <PDM_LIST PREFIX=list FACTORY=role_go_form WHERE="role_obj = $SESSION.ROLE_ID AND web_form_obj.wf_type = 2">
	fname = "$list.web_form_obj.name";
	fname_arr[idx] = fname;
	idx++;
	code_name = "$list.web_form_obj.code";
	code_arr[fname] = code_name;
	if ("$list.is_default" == "1")
	    default_code = code_name;
	resource = "$list.web_form_obj.resource";
	role_menu = "$list.menu_bar_obj.htmpl_name";
	dflt_obj_type = "$list.web_form_obj.dflt_for_obj"; 
	go_list[code_name] = new Go_Data(resource, role_menu, dflt_obj_type);
        if (ticket_role_menubar == "" && 
            (dflt_obj_type == "cr" || dflt_obj_type == "in" || dflt_obj_type == "pr" ||
             dflt_obj_type == "chg" || dflt_obj_type == "iss") )
            ticket_role_menubar = role_menu;
    </PDM_LIST>
    if (ticket_role_menubar != "")
        ahdtop.ticket_role_menubar = ticket_role_menubar;

    if (fname_arr.length > 0)
    { 
	show_go = 1;
	fname_arr.sort(function(x,y) { 
		var a = String(x).toUpperCase(); 
		var b = String(y).toUpperCase(); 
		if (a > b) 
			return 1;
		if (a < b) 
			return -1;
		return 0; 
	}); 
	for (idx = 0; idx < fname_arr.length; idx++)
	{	
	    fname = fname_arr[idx];
	    code_name = code_arr[fname];
	    go_html += "<option value='" + code_name + "'";
	    if (default_code == code_name)
		go_html += " selected='selected'";
	    go_html += ">" + fname + "</option>\n";
	}
    }
    go_html += '</select>';
    go_html += '</td><td style="width:5px;"></td><td>';
    go_html += '<input type="text" name="searchKey" tabindex="1" size="41" autocomplete="off" onchange="trimSearchKey(this)" onfocus="gobtnFocus(this)" onblur="gobtnBlur(this)" title="Object key">';
    go_html += '</td><td style="width:1px;"></td><td>';
	
    if (show_go)
    {
	html += go_html;							
	document.write(html);
    <PDM_MACRO NAME=button 
        id="btndflt" 
        caption="Idź" 
        func="openDetail_role()" 
        tooltip="Wyświetl okno dla wybranego elementu"
        hotkey_name="Go[G]" >
    
    document.write('</td>');
    <PDM_IF "$prop.DebugOptions" : "[Dd][Ll][Oo][Gg]">
        document.write('<td>');
        <PDM_MACRO NAME=button 
            id="btndbg" 
            caption="Debug Log" 
            func="ahdtop.dLogShow()" 
            tooltip="Show contents of debug log"
            hotkey_name="Debug Log" >
        document.write("</td><td>");
        <PDM_MACRO NAME=button 
            id="btndbg2" 
            caption="Popup HTML" 
            func="popupDocumentInfo('all',ahdframeset.ahdframe.document.body)" 
            tooltip="Popup HTML reconstructed from DOM of current main frame"
            hotkey_name="Popup HTML" >
        document.write('</td>');
    </PDM_IF>
	document.write('</tr></table>');
	document.write('</a></form>');
	document.write('</div>');
    }
    else 
    {
	document.write(html);
    }
	document.write("</td></tr></tbody></table>");
    html = '<form name="globals">';
    html += '<input type="hidden" name="folder_status"> <input type="hidden" name="KEY.profile_search">';
    html += '</form>';
			
    if ( typeof ahdtop.propUrlCi == "string" && ahdtop.propUrlCi.length > 0 ) {
	html += "<form name='ci_search' action='" + ahdtop.propUrlCi +
		"' method='POST' target='" + ahdtop.ciSearchWindow + "'>" +
		"<input type='hidden' name='ACTION' value='AHD_CI_SEARCH'>" +
		"<input type='hidden' name='BOPSID'>" +
		"<input type='hidden' name='DESCRIPTION'>" +
		"</form>";
    }
} // END block for analyst interface
</PDM_IF>

if ( html.length > 0 )
  document.writeln(html);

// If this is for making a menu tree copy, bring up hour glass. 
if (typeof parent.cfgInitialURL == "string")
{
    var init_url = parent.cfgInitialURL.toUpperCase();
    if (init_url.indexOf("METHOD=MAKE_MENU_TREE_NAME_COPY") >= 0 && 
	typeof parent.cai_main.propFormName == "undefined")
    {
	set_action_in_progress(ACTN_LOADFORM);
    }
}
</script>

</body>
</html>
<PDM_IF 0>
@(#)$Id: gobtn_role.htmpl ASPEN.8 2012/05/11 15:27:14 upeha01 Exp $
</PDM_IF>
