<PDM_IF 0>
menu_tree.htmpl
WHEN PRESENTED:
	Htmpl for display the menu tree.     
</PDM_IF>
<html lang="en"><head>
<PDM_PRAGMA RELEASE=110>
<PDM_INCLUDE FILE=styles.htmpl>
<PDM_INCLUDE FILE=std_head.htmpl busy=no NoRClickMenu=1>
<script type="text/javascript" src=$CAisd/scripts/report.js></script>
<script type="text/javascript">
var m_ArchitectViewStyle = '$prop.ARC_TREE_UI';
var m_lArrayNumber = 0;
var lParentID = 0;
var rootID = -1;

function MenuTreeOnClick(lCurrCatID, sfile_name, update_flag, snew_file_name, isImage)
{
    ahdframe = window.parent.ahdframe;
    ahdframe.parent.setCurrentIndex(lCurrCatID);
    LoadMenuTree(lCurrCatID,sfile_name, update_flag, snew_file_name, isImage);
}

function LoadMenuTree(lCurrCatID, sfile_name, update_flag, snew_file_name, isImage)
{
    // To solve the SDT 58903 "Cannot get the Knowledge Categoies to open off Windows 2003 with FireFox 1.5"
    // Knowledge Categories is opened here and not in kt_architect_init.htmpl.
    var sLCaseFileName = sfile_name;
    sLCaseFileName.toLowerCase();
    if ( sfile_name == "kt_architect_init.htmpl" )
    {
	popupKnowledgeCategories();
    }
    if (update_flag == 1)
    {
	var found_already = false;
	var found_at = -1;
	
	for(i = 0; i<ahdframe.parent.test_cache.length; i++)
	{
	    if(ahdframe.parent.test_cache[i].nid == lCurrCatID)
	    {
		found_already = true;
		found_at = i;
		break;
	    }
	}
	if(!found_already)
	{		
	    var oldlen = ahdframe.parent.test_cache.length;
	    var ee = new ahdframe.parent.testobj(lCurrCatID, snew_file_name);
	    ahdframe.parent.test_cache.push(ee);
	}
	else
	{
	    ahdframe.parent.test_cache[found_at].nname = snew_file_name;
	}
    }

    var index=sfile_name.indexOf("OP=");
    var indexrpt=sfile_name.toLowerCase().indexOf(".rpt");

    var url = cfgCgi + "?SID=" + cfgSID + "+FID=" + fid_generator() + "+";
    var form = "";

    if(lCurrCatID == rootID)
	form = "menu_tab_dflt.htmpl";		
    else if (index != -1)
    {
	for(i = 0; i < ahdframe.parent.test_cache.length; i++)
	{ 
	    if(ahdframe.parent.test_cache[i].nid == lCurrCatID)
	    {
		sfile_name = ahdframe.parent.test_cache[i].nname;
		break;
	    }
	}	
	if (lCurrCatID != rootID && sfile_name =="")
	    form = "menu_empty.htmpl";             		 			
	else
	    form += sfile_name;
             		
	if (isImage != true )	 
	    ExpandCollapseCurrNodeChilds();
		
    }
    //  Need to load report processing instead of a url if the sfile_name extension is .rpt
    else if (indexrpt != -1)
    {				
	for(i = 0; i < ahdframe.parent.test_cache.length; i++)
	{
	    if(ahdframe.parent.test_cache[i].nid == lCurrCatID)
	    {
		sfile_name = ahdframe.parent.test_cache[i].nname;					
		break;
	    }
	}
	form = "menu_empty.htmpl";
	if (lCurrCatID != rootID && sfile_name !="")	
	    popup_report(sfile_name,"");
    }		
    else
    {				
	for(i = 0; i < ahdframe.parent.test_cache.length; i++)
	{
	    if(ahdframe.parent.test_cache[i].nid == lCurrCatID)
	    {
		sfile_name = ahdframe.parent.test_cache[i].nname;					
		break;
	    }
	}
	if (lCurrCatID != rootID && sfile_name =="")
	    form = "menu_empty.htmpl";		            			
	else
	    form = sfile_name;

	if (isImage != true )              			
	    ExpandCollapseCurrNodeChilds();
    }	
    if ( form != "" ) 
    {
	// If OP is specified in the form name don't append OP=DISPLAY_FORM_HTMPL
          
	var op_found_index=form.indexOf("OP=");
	if(op_found_index !=-1)
	    url+=form;
	else
	    url += "OP=DISPLAY_FORM+HTMPL=" + form;
    }
        		
    //append DOMSET=option_list to all individual option nodes under the "Option Manager" node
    // so that these nodes can be sorted only by sym --- SDT 37259
    var opt_nodes=url.indexOf("OP=SEARCH+FACTORY=options+QBE.EQ.app_name");
    if(opt_nodes !=-1)
	url+="+DOMSET=option_list";

    // For when the menu tree is being displayed by using the
    // Customize Menu functionality from detail_menu_tree_name.htmpl.
    if ( typeof ahdframeset == "object" && ahdframeset != ahdtop )
    {
        url += "+KEEP.POPUP_NAME=$args.KEEP.POPUP_NAME";
    }
         	
    ahdframe.location=url;
}

function popupKnowledgeCategories() 
{
    //ER added +RELOAD_WIN=0 so that window regains focus and doesn't reload into ahdframe
    var form = "kt_architect.htmpl";
    var url = cfgCgi + "?SID=" + cfgSID + "+FID=" + cfgFID +
	      "+OP=DISPLAY_FORM+HTMPL=" + form +
              "+KEEP.IsPopUp=1+RELOAD_WIN=0";
    var features="directories=no"+
		 ",location=no"+
		 ",status=no";

    // Force the popup of this screen by negating the width
    preparePopup(url, "ARCHITECT", features, -1, 1, "MENUBAR=no");
}

function InitTree()
{
    if ("$args.menu_name" == "")
    {
	alert(formatmsg("The menu_name value in the URL for the frame, %1, is missing.", window.name));
	return;
    }
    var rootCaption = "";
    <PDM_LIST PREFIX=list FACTORY="menu_tree" WHERE="tree_name.code = '$args.menu_name' AND parent_id = 0">
	rootID = $list.id; 
	rootCaption = "$list.caption";
	treeNameID = $list.tree_name;
    </PDM_LIST>
    if (rootID == -1) 
    {
	alert("Cannot find the menu tree root for the menu tree: $args.menu_name");
	return;
    }	
    var sObjectName, sFrameTitle;
    sObjectName = "menu_tree";    
    sFrameTitle = msgtext("Menu_Tree"); // Menu Tree 
    var sRepName = "";
    var MenuTree = window.frames["MenuTree"];
    if (typeof ahdframeset.menuTreeWindows == "undefined")
    {
        ahdframeset.menuTreeWindows = new Array();
        m_lArrayNumber = 0;
    }
    else 
    {
        m_lArrayNumber = ahdframeset.menuTreeWindows.length;
    }
    ahdframeset.menuTreeWindows[m_lArrayNumber] = window;
    var url= cfgCgi+"?SID="+cfgSID+"+FID="+fid_generator()+"+OP=DISPLAY_FORM+HTMPL=hiersel_menu_tree.htmpl+menu_name=" +
	     nx_escape("$args.menu_name") + "+PARENT_ID=" + lParentID + 
	     "+OBJECT_NAME=" + sObjectName + "+lArrayNumber=" + m_lArrayNumber +
	     "+rootID=" + rootID + "+rootCaption=" + nx_escape(rootCaption) +
	     "+treeNameID=" + treeNameID +
	     "+KEEP.ALLOW_MENU_TREE_EDIT=$args.KEEP.ALLOW_MENU_TREE_EDIT";

    if ( typeof ahdframeset == "object" && ahdframeset != ahdtop )
    {
        url += "+KEEP.POPUP_NAME=$args.KEEP.POPUP_NAME";
    }

    if ( typeof MenuTree != "object" || MenuTree == null )
        alert(formatmsg("The frame, MenuTree, is not defined in the frame: %1", window.name));
    else 
    {
        MenuTree.location.href = url;     
	MenuTree.title = sFrameTitle;
    }
}

function MenuTreeLoaded()
{
    MenuTree.Init(window,MenuTree);
}

function GetTreeFrame()
{   
    return MenuTree.GetTreeFrame();
}

function DeleteNode(lNodeID, bDeleteChidNodes)
{
    ahdframeset.menuTreeWindows[m_lArrayNumber].GetTreeFrame().DeleteNode(lNodeID, bDeleteChidNodes);
}
   
function UpdateTree(lNodeID,bIsNew,sNodeCaption,lParentID,sRelID,iHAS_CHILDREN)
{
    var oTreeFrame = ahdframeset.menuTreeWindows[m_lArrayNumber].GetTreeFrame();
    if (typeof oTreeFrame != "undefined")
    {
        oTreeFrame.UpdateTree(lNodeID,bIsNew,sNodeCaption,lParentID,sRelID,iHAS_CHILDREN);
    }
}

function ExpandCollapseCurrNodeChilds()
{
    if (!is_action_in_progress())
    {
	return;
    }
    else
    {
        var oTreeFrame = ahdframeset.menuTreeWindows[m_lArrayNumber].GetTreeFrame();
        if (typeof oTreeFrame != "undefined")
        {
            var oNode = oTreeFrame.Tree_Lib_GetCurrNode();
	    // It's not a father or it's a root node, don't 
	    // do anything.
            if (!oNode.kt_Tree_Is_Father || oNode.kt_tree_id == rootID)
            {
                return;
            }
            var lNodeID = oNode.TreeNodeID;
            if (!oNode.kt_tree_child_Data_loaded)
            {
                oTreeFrame.TreeOnPlusMinusClick(lNodeID)
            }
	    else
            {
		if (!oNode.TreeIsOpen)
		    oNode.Tree_Expand();
                else
                    oNode.Tree_Collapse();
            }
        }
    }
}

</script>
</head>
<frameset rows="*,0" onload= "InitTree()"
          frameborder=0 framespacing=0>
<frame id=MenuTree name=MenuTree src="$CAisd/html/empty.html" scrolling="$SESSION.scrolling"
       title="Menu Tree">
<frame id=KTCatData name=KTCatData src="$CAisd/html/empty.html"
       title="Hidden frame - do not navigate here">
</frameset>
</html>
<PDM_IF 0>
@(#)$Id: menu_tree.htmpl ASPEN.2 2010/11/24 19:26:05 pstso01 Exp $;
</PDM_IF>
