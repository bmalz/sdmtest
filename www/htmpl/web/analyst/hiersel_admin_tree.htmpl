<PDM_IF 0>
WHEN PRESENTED:
    When we need to display the Admin Tree.   
</PDM_IF>
<html lang="en"><HEAD>
<PDM_PRAGMA RELEASE=110>
<PDM_INCLUDE FILE=styles.htmpl>
<PDM_INCLUDE FILE=std_head.htmpl>
<SCRIPT LANGUAGE="JavaScript" SRC="$CAisd/scripts/admin_tree_menu.js"></SCRIPT>
<LINK REL="stylesheet" TYPE="text/css" HREF="$CAisd/css/KT_Styles.css">
<SCRIPT LANGUAGE="JavaScript">
// Tree views vars:
var m_sView = "$args.view";
var m_sCurrRelID = "$args.CurrRelID";
var m_bTreeBusy = false;
var m_NodeToloadChildTo = null;
var m_MenuNode = null;
var m_sObjectName = '$args.OBJECT_NAME';
//var m_lRepID = '$args.RepID';
var m_lArrayNumber = '$args.lArrayNumber';
//
var sdadmin = '$INTERFACE.sd_admin';
var ktadmin = '$INTERFACE.kt_admin';
var ktmanager = '$INTERFACE.kt_manager';
var m_bFullKT = true;
if (ahdtop.cfgNX_KT != "Yes")
{
	m_bFullKT = false;
}

</SCRIPT>
	
<SCRIPT>
// Architect Tree Stuff
var m_arrCatToCreate = new Array();
var m_lCatToCreateCNT = 0;
function loadTree()
{
			//var oInbox = LoadNode(null, -3, "Admin Tree", false, "1","0","");
			//var oInbox = LoadNode(null, -3, "Admin Tree", false, "0");
			//oInbox.kt_Tree_rel_ids = "1";
			//Tree_Lib_ChangeImage(oInbox ,"/CAisd/img/kt_ArchitectInbox_Folder.gif","/CAisd/img/kt_ArchitectInbox_Folder.gif");
		var oTop = LoadNode(null, 100, "Administration", true, "0","");
		oTop.kt_tree_child_Data_loaded = true;
		m_NodeToloadChildTo = oTop;
		GetDataEnd(true);
		// select the Administration node by default.
		TreeOnFolderClick(oTop.TreeNodeID);
		Tree_Lib_GoToNode(oTop, true);
}
function LoadNode(oParent, lID, sCaption, bHasChildren,lParentID, file_name)
{
	// don't show some cia options if cia not configured
	if(!ahdtop.cfgCIA)
	{
		if(lID==280 || lID==281 || lID==282 || lID==283 || lID==284) return;
	}

	// To match the 6.0 java client administration menu, don't show Request, Change Order or Issue nodes 
	// if the respective function is set to None in the Access Type
	if($ACCESS.call_mgr == 0 && lID == 185
		|| $ACCESS.change_mgr == 0 && lID == 180
		|| $ACCESS.issue_mgr == 0 && lID == 188) return;

	var oNode = getTreeNodeByKCATID(lID);
	//making sure the not is not allready there, could happen when clickng on the back button and reloading the hidden frame sdt 32231 
	if (oNode != null)
	{
		return oNode;
	}
	var oNewNode = new Tree_Node(sCaption, oParent)	
	oNewNode.kt_tree_id = lID;
	oNewNode.kt_Tree_caption = sCaption;
	oNewNode.kt_tree_child_Data_loaded = false;
	oNewNode.kt_Tree_has_children = bHasChildren;	
	oNewNode.kt_Tree_parent_id = lParentID;
	oNewNode.kt_Tree_file_name = file_name;
	if (bHasChildren)
	{
		if (oParent!=null)
		{
			Tree_Lib_showPlusMinusOnChild(oNewNode,true);
		}
		oNewNode.kt_Tree_Is_Father = true;
	}
	else
	{
		oNewNode.kt_Tree_Is_Father = false;
	}
	if 	(m_sObjectName == "attmnt_folder" && oParent == null)
	{
		oNewNode.TreeImageClose = "/CAisd/img/doc_rep.gif";
		oNewNode.TreeImageOpen = "/CAisd/img/doc_rep.gif";
	}
	return oNewNode;
}

function TreeOnFolderClick(lNodeID,isImage)
{
	var oNode = Tree_GetNodeFromID(lNodeID);
	if (oNode == null)
	{
		return;
	}
	//SDT 34771 - click on the current admin node refreshes the admin page
	//if (oNode != Tree_Lib_GetCurrNode())
		Tree_Lib_GoToNode(oNode,true);
		if (m_oCallingDocObject!= null)
		{
			m_lCurrCatID = oNode.kt_tree_id;
			//alert(m_lCurrCatID);
			m_sCurrPathText = Tree_Lib_GetPath(oNode);
			m_sfile_name = oNode.kt_Tree_file_name;

			if (typeof m_oCallingDocObject.CatTreeOnClick == "function")
			{
					if (isImage == true )
					m_oCallingDocObject.CatTreeOnClick(m_lCurrCatID,m_sCurrPathText,m_sfile_name,0,null,isImage);
					else
					m_oCallingDocObject.CatTreeOnClick(m_lCurrCatID,m_sCurrPathText,m_sfile_name);
				
			}
		}
}

function update_filename(oNode,sfile_name)
{
			m_lCurrCatID = oNode.kt_tree_id;
			m_sCurrPathText = Tree_Lib_GetPath(oNode);
			m_sfile_name="";
			flag=1;
			m_snew_file_name = sfile_name;
			if (typeof m_oCallingDocObject.CatTreeOnClick == "function")
			{
					m_oCallingDocObject.CatTreeOnClick(m_lCurrCatID,m_sCurrPathText,m_sfile_name,flag,m_snew_file_name);
				
			}
}

function TreeOnImageFolderClick(lNodeID)
{
	TreeOnPlusMinusClick(lNodeID);
	TreeOnFolderClick(lNodeID, true);
}
function TreeOnRightClick(event,lNodeID)
{
	var oNode = Tree_GetNodeFromID(lNodeID);
	if (oNode.kt_tree_id < 0)
	{
		return false;	// Return false so that the browser context menu does not display
	}
	m_oMenuNode = oNode;
	
	var backup_m_ContextMenu=m_ContextMenu;
	if(oNode.kt_tree_id == 100)
	{		
		m_ContextMenu=admin_top;
	}		
    var assoc = document.getElementById("s" + lNodeID + "ds");
	m_ContextMenu.show(event, assoc, 0, true);
	m_ContextMenu=backup_m_ContextMenu;
	
    try {
      if ( _browser.isIE ) {
        event.cancelBubble = true;
        event.returnValue = 0;	
      }
      else {
        event.preventDefault();
        event.stopPropagation();
      }
    }
    catch(e) {}
	
	return false;	// Return false so that the browser context menu does not display
}
function TreeOnPlusMinusClick(lNodeID)
{
	var oNode = Tree_GetNodeFromID(lNodeID);
	if (oNode == null)
	{
		return;
	}
	if (oNode.kt_tree_id < 0)
	{
		return;
	}	
	if (oNode.kt_Tree_parent_id  == 0 && m_sObjectName == "ADMIN_TREE")
	{
		return;
	}
	if (m_bTreeBusy)
	{
		return;
	}
	if (!oNode.kt_Tree_Is_Father)
	{
		return;
	}
	if (oNode.kt_tree_child_Data_loaded)
	{
		Tree_Lib_ExpandOrCollapse(oNode);
	}
	else
	{	
		if (!action_in_progress())
		{
			m_NodeToloadChildTo = oNode;
				var url=cfgCgi+"?SID="+cfgSID+
				"+FID="+cfgFID+
				"+OP=DISPLAY_FORM" + 
				"+HTMPL=hierload_admin_tree.htmpl" +
				"+OBJECT_NAME=" + m_sObjectName + 
				"+PRN_ID=" + m_NodeToloadChildTo.kt_tree_id + "+lArrayNumber=" + m_lArrayNumber;

			set_action_in_progress(ACTN_FILLFORM);
			ahdframeset.workframe.location.href = url;
		}
	}
}

function GetDataStart()
{
	m_arrCatToCreate = new Array();
	m_lCatToCreateCNT = 0;
}

function GetData(lID,sCaption,lHasChildren,lParentID, fname)
{
	var arrNode = new Array();
	arrNode [0] = lID;
	arrNode [1] = sCaption;
	arrNode [2] = lHasChildren;
	arrNode [3] = lParentID;
	//FILE_NAME field was renamed to RESOURCE to accomdate parameters 
	//to be passed along with URL and not nly filenames 
	//fname --> resource
	arrNode [4] = fname;
	m_lCatToCreateCNT++;
	m_arrCatToCreate[m_lCatToCreateCNT] = arrNode
}

function GetDataEnd(bDrawAll)
{
	var bDrawAllIn = false;
	if (GetDataEnd.arguments.length>0)
	{
		bDrawAllIn = bDrawAll;
	}
	for (var i=1; i < m_lCatToCreateCNT + 1; i++)
	{
		var lID = m_arrCatToCreate[i][0];
		var sCaption = m_arrCatToCreate[i][1];
		bHasChildren = false;
		if (m_arrCatToCreate[i][2] == 1)
		{
			bHasChildren = true;
		}
		var lParentID = m_arrCatToCreate[i][3];
		var file_name = m_arrCatToCreate[i][4];
		LoadNode(m_NodeToloadChildTo, lID, sCaption, bHasChildren,lParentID,file_name);
	}
	if (bDrawAllIn)
	{
		Tree_DrawAll("divTree");
	}
	else
	{
		m_NodeToloadChildTo.Tree_Expand();
		m_NodeToloadChildTo.Tree_DrawChildren();
		m_NodeToloadChildTo.kt_tree_child_Data_loaded = true;
		set_action_in_progress(ACTN_COMPLETE);
	}
}

</SCRIPT>
<SCRIPT LANGUAGE="JavaScript">
//var field_name = "Category";
//var form_title = "Knowledge Categories Tree";
//var form_title = "";
</SCRIPT>
<SCRIPT LANGUAGE="JavaScript" SRC="$CAisd/scripts/convert_date.js"></SCRIPT>
<SCRIPT LANGUAGE="JavaScript" SRC="$CAisd/scripts/backfill.js"></SCRIPT>
<SCRIPT LANGUAGE="JavaScript" SRC="$CAisd/scripts/fldrtree.js"></SCRIPT>
<SCRIPT LANGUAGE="JavaScript" SRC="$CAisd/scripts/hier_set.js"></SCRIPT>
<SCRIPT LANGUAGE="JavaScript" SRC="$CAisd/scripts/kt_tree.js"></SCRIPT>
<SCRIPT LANGUAGE="JavaScript" SRC="$CAisd/scripts/kt_system.js"></SCRIPT>
<SCRIPT LANGUAGE="JavaScript" SRC="$CAisd/scripts/sitemods.js"></SCRIPT>
<SCRIPT>
var m_sMenuType = "$args.Menu";
var m_sCurrPathText = "";
var m_sfile_name= "";
var m_sCurrFldrPathIDs = "";
var m_oCallingDocObject = null;
var m_lCurrCatID = 0;
var m_objTree = null;

function GetTreeFrame()
{
	if (m_objTree==null)
	{
		return window;
	}
	else
	{
		return m_objTree;
	}
}

function Init(oCallingDocumentObj,objTree)
{
	m_oCallingDocObject = oCallingDocumentObj;
	m_objTree = objTree;
}

function UpdateTree(lNodeID,bIsNew,sNodeCaption,lParentID,iHAS_CHILDREN,sfile_name)
{
	if (!bIsNew)
	{
		var oNode = getTreeNodeByKCATID(lNodeID);
		if (oNode != null)
		{
			
		 Tree_Lib_SetNodeText(oNode, sNodeCaption);	
		 update_filename(oNode,sfile_name);						
		}		
	}
	else
	{
		var oNodeParent = getTreeNodeByKCATID(lParentID);
				
		if (oNodeParent != null)
		{
			if(!oNodeParent.kt_tree_child_Data_loaded)
			{
				if (!oNodeParent.kt_Tree_Is_Father)
				{
					oNodeParent.kt_Tree_Is_Father = true;
					Tree_Lib_showPlusMinusOnChild(oNodeParent,true);
				}
				TreeOnPlusMinusClick(oNodeParent.TreeNodeID);
			}
			else
			{
				bHasChildren = false;
				if (iHAS_CHILDREN==1)
				{
					bHasChildren = true;
				}
				var oNewNode = LoadNode(oNodeParent, lNodeID, sNodeCaption, bHasChildren,lParentID,sfile_name)
				
				oNodeParent.Tree_Expand();
				oNodeParent.Tree_DrawChildren();				
			}
		}
	}	
}
function getTreeNodeByKCATID(lID)
{
	for (var i=1; i<Tree_m_lLastNodeID+1; i++)
	{
		if (Tree_m_arrNodes[i].kt_tree_id == lID)
		{
			return Tree_m_arrNodes[i];
		}
	}
	return null;
}


function Loaded()
{
	if (typeof parent.KTCatTreeLoaded == "function")
	{
		parent.KTCatTreeLoaded();
	}
		loadTree();
}
</SCRIPT>
<SCRIPT LANGUAGE="JavaScript" SRC="$CAisd/scripts/sitemods.js"></SCRIPT>
</HEAD>
<BODY CLASS="list" onLoad="fldrtreeTabOff();Loaded()" LEFTMARGIN=3 TOPMARGIN=3>
<PDM_INCLUDE FILE=std_body.htmpl menubar=no logo=no header=no>

	<SCRIPT LANGUAGE="JavaScript">
	GetDataStart();
		var bShow;
		var bBlockForKTLite;
		var sNodeCaption;
		<PDM_LIST PREFIX=list FACTORY=$args.OBJECT_NAME WHERE="PARENT_ID = 100" ORDER_BY = "CAPTION">
			bShow = false;	
			bBlockForKTLite = false;
			sNodeCaption = '<PDM_FMT ESC_STYLE=C KEEPTAGS=YES>$list.CAPTION</PDM_FMT>';
			// Finding out if to show node items per sd_admin, kt_admin and kt_manager flags
			if ('$list.SD_ADMIN' == '1')
			{
				if (sdadmin == '1')
				{
					bShow = true;	
				}
			}
			if ('$list.KT_ADMIN' == '1')
			{
				if (ktadmin == '1')
				{
					bShow = true;	
				}
			}
			if ('$list.KT_MANAGER' == '1')
			{
				if (ktmanager == '1')
				{
					bShow = true;	
				}
			}
			if (bShow)
			{
				if ('$list.KT_KS_FLAG' == '2')
				{
					if (!m_bFullKT)
						bBlockForKTLite = true;
				}
				else if ('$list.KT_KS_FLAG' == '1')
				{
					if (!m_bFullKT)
			            sNodeCaption = '<PDM_FMT ESC_STYLE=C KEEPTAGS=YES>$list.KT_KS_CAPTION</PDM_FMT>';
				}
			}
			if (bShow && !bBlockForKTLite)
			{
				GetData($list.id, sNodeCaption, $list.HAS_CHILDREN, $list.PARENT_ID,'$list.RESOURCE');
			}
		</PDM_LIST>
		
		// m_ContextMenu seeme to be harcoded everywhere
		// to get the the problem of showing just some context menu items when top is right clicked
		// we need to to create set m_sMenuType="admin_top" which is taken care in kt_tree_menu.js
		// and switch it back so that all the items are showed on rest of the nodes other than TOP
		
		var m_ContextMenu = new ContextMenu("admin_top");
		var backup_m_sMenuType=m_sMenuType;
		m_sMenuType="admin_top";		
		SetCatTreeMenu();
		
		var admin_top=m_ContextMenu;
		var m_sMenuType=backup_m_sMenuType;
		var m_ContextMenu = new ContextMenu("adm_tree");
		SetCatTreeMenu();
		

	</SCRIPT>

<DIV id="divTree"></DIV>
<PDM_INCLUDE FILE="std_footer.htmpl">
</BODY>
</HTML>
</HTML>
<PDM_IF 0>
@(#)$Id: hiersel_admin_tree.htmpl ASPEN.2 2011/10/20 17:37:23 visan03 Exp $;
</PDM_IF>
